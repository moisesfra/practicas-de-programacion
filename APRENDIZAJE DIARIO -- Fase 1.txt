Comienzo de la FASE 1 (DIA 1) --->>> 10 de Febrero del 2021  
Consta de 3 cursos que se deben aprobar en Freecodecamp;  1# Responsive Web Designs; 2# JavaScript Algorithms and Data Structures; 3# Front End Development Libraries.

1# Responsive Web Designs

RESUMEN DE LO APRENDIDO EN CADA LECCIÓN!!!

1# Responsive Web Designs
	1.1- HTML básico y HTML5
		1.1.1.	Di hola a los elementos HTML
		_ Se aprende lo que es <h1> lo que se llamaría (Encabezado/Header) y van desde el h1 hasta el h6. Así, <h1> sería el encabezado más grande mientras que
		el <h6> sería el más pequeño. Su APERTURA es <h1> y su CIERRE </h1> .
		1.1.2.  Título con el elemento h2
		_ Se usa a colocar encabezados además del h1 como el h2 para que sean más pequeños.
		1.1.3.  Informa con el elemento párrafo
		_ Se presentan lo que son los "Elementos" tipo (p) lo que se llamaría (Párrafo/Paragraph). Con los cuales se usan para colocar texto en formas de 
		párrafos en la páginas web. ALERTA!!!: Por convención, todas las etiquetas HTML son escritas en minúsculas, por ejemplo <p></p> y no <P></P>.
		1.1.4.  Rellena el espacio en blanco con texto provisional
		_ Se usan los elementos tipo "p", para colocar y modificar más texto en la web.
		1.1.5.  Descomenta código HTML
		_ Se aprende, como comentar en HTML. Los comentarios en HTML comienzan con <!-- y terminan con --> . Y puedes escribir lo que se te de la gana dentro
		de esos valores entre los <!-- y --> .
		1.1.6.  Comenta HTML
		_ Se usa la forma de comentar en HTML ya aprendida, pero ahora se segmenta por partes. Para poder hacer múltiples comentarios.
		1.1.7.  Elimina elementos HTML
		_ Modifica los encabezados en el código, exactamente el "h1" lo elimina y quedaría en el código el "h2" además con su respectivo atributo "p".
		1.1.8.  Introducción a los elementos HTML5
		_ Se aprende las "Nuevas" etiquetas que trae la versión 5 de HTML. Como estas incluyen main, header, footer, nav, video, article, section, 
		entre otras. Por ejemplo, en "main" se usa para ayudar a los motores de búsqueda y otros desarrolladores a encontrar el contenido principal de tu 
		página, para lo cual se usa <main> para ABRIR y para CERRAR </main> .
		1.1.9. Agrega imágenes a tu sitio web
		_ Se aprende a como agregar fotos en tu página web a traves de enlaces, utilizando el elemento "img", y apuntar a la URL de una imagen específica 
		usando el atributo "src". Un ejemplo de esto sería:  <img src="https://www.freecatphotoapp.com/your-image.jpg"> . Además de eso se aprende sobre
		que se DEBE TENER obligatoriamente en los elementos "img" se debe tener el atributo "alt" . Es decir, el texto dentro de un atributo alt es 
		utilizado por los lectores de pantalla para mejorar la accesibilidad y se muestra si la imagen falla en cargar. Por ejemplo: 
		<img src="https://www.freecatphotoapp.com/your-image.jpg" alt="A business cat wearing a necktie."> . NOTA:Si la imagen es puramente decorativa, 
		usar un atributo "alt" vacío es una buena práctica.
		1.1.10. Enlaza hacia páginas externas con los elementos "anchor"
		_ Se aprende un elemento "a" que vendría siendo (anchor/anchor) que tiene por uso para enlazar a contenido fuera de la página web. Los elementos a 
		requieren un atributo href con la dirección web de destino. También necesitan un texto anchor. Por ejemplo: 
		<a href="https://freecodecamp.org">this links to freecodecamp.org</a>  .Entonces tu navegador mostrará el texto this links to "freecodecamp.org" como 
		un enlace que puedes hacer clic. Y ese enlace te llevará a la dirección web "https://www.freecodecamp.org".
		1.1.11 Enlaza hacia secciones internas de una página con los elementos anchor
		_ Ya se sabe el enlazar una dirección web a través del texto (Como "Hipervinculo"). Sino que ahora se puede hacer eso pero en la misma web internamente,
		es decir; que es para crear enlaces internos para saltar a diferentes secciones dentro de una página web. Y se hace así: asignas el atributo "href" de un 
		enlace con un símbolo hash "#" más el valor del atributo "id" para el elemento al que deseas enlazar internamente, normalmente más abajo de la página. 
		Luego necesitas agregar el mismo atributo "id" al elemento que estás enlazando. Un "id" es un atributo que describe un elemento de forma única. Por Ejemplo:
		<a href="#contacts-header">Contacts</a>
		...
		<h2 id="contacts-header">Contacts</h2>
		En CONCLUSIÓN: Cuando los usuarios hagan clic en el enlace Contacts, serán llevados a la sección de la página con el elemento título Contacts.
		1.1.12 Anida un elemento anchor dentro de un párrafo
		_ Te enseña a como "Anidar" varios enlaces dentro de otros elementos de texto. Por Ejemplo:
		<p>
  		Here's a <a target="_blank" href="http://freecodecamp.org"> link to freecodecamp.org</a> for you to follow.
		</p>
		El texto normal está envuelto en el elemento "p":  <p> Here's a ... for you to follow. </p>   .Luego después el elemento "anchor" <a> (el cual requiere 
		una etiqueta de cierre </a>), es decir: <a> ... </a>  .Además "target" es un atributo que la etiqueta "anchor"  especifica donde abrir el enlace y el 
		valor "_blank" especifica abrir el enlace en una nueva pestaña, "href" es un atributo de la etiqueta "anchor" que contiene la dirección URL del enlace:
		<a href="http://freecodecamp.org"> ... </a>  .
		1.1.13. Crea enlaces muertos utilizando el símbolo hash
		_ Para descativar los enlaces y/o hipervínculos "Muertos", además es útil cuando estás cambiando el comportamiento de un enlace usando JavaScript,
		 se usa  un "#" para crear un enlace muerto. Por ejemplo, El valor actual del atributo "href" es un enlace que apunta a
		 "https://freecatphotoapp.com". Reemplaza el valor del atributo href por un "#" (también conocido como símbolo hash, numeral o almohadilla) para crear un 
		enlace muerto. Por ejemplo: href="#" .
		1.1.14. Convierte una imagen en un enlace
		_ Se enseña si "anidas" elementos en enlaces dentro un elemento "a". Por ejemplo:
		<a href="#"><img src="https://bit.ly/fcc-running-cats" alt="Three kittens running towards the camera."></a>
		NOTA!!!: Recuerdar usar "#" como propiedad "href" como tu elemento "a" para convertirlo en un enlace muerto.
		1.1.15. Crea una lista no ordenada
		_ Se aprende que HTML tiene Listas (Bien sea Ordenas o No ordenadas), pero lo cual en el caso de las No Ordenadas ABREN con un elemento <ul> seguido
		de cualquier número de elementos <li> , para luego CERRAR con un </ul> . (En este caso, se crearía una lista con estilo de viñetas de milk y cheese). 
		Por ejemplo: 
		<ul>
  			<li>milk</li>
  			<li>cheese</li>
		</ul>
		1.1.16. Crea una lista ordenada
		_ Se aprende que las listas "Ordenadas" ABREN con un elemento de apertura <ol>, seguido de cualquier número de elementos <li>. Por último, las listas 
		ordenadas se cierran con la etiqueta </ol>. (En este caso se crearía una lista numerada de Garfield y Sylvester). Por Ejemplo:
		<ol>
 			 <li>Garfield</li>
  			 <li>Sylvester</li>
		</ol>
		1.1.17. Crea un campo de texto
		_ En esta parte se propone hacer un formulario web. A través, de los elementos de entrada "input". ES DECIR, EL CUADRITO DONDE VAS A METER LA INFORMACIÓN 
		en el cual puedes meter información ahí.
		Por ejemplo: 
		<input type="text"> 
		NOTA!!!: Ten en cuenta que los elementos "input" se cierran automáticamente. 
		1.1.18. Agrega texto provisional a un campo de texto
		_ El texto provisional son las letricas casi "transparentes" que puedes colocar en el CUADRITO, que te aparecen antes de meter información ahí. Es decir,
		es lo que se muestra en tu elemento de entrada "input" antes de que el usuario haya ingresado nada. Por ejemplo:
		<input type="text" placeholder="this is placeholder text">
		Entonces lo que se verá dentro de la cajita en letra casi transparentes es: "this is placeholder text" .
		1.1.19. Crea un elemento de formulario
		_ TODO ESTE TIEMPO el formulario creado era como una especie de prueba, "pero" si quieres que se funcional para que envíe datos a un servidor real,
		nesecitarás ESPECIFICAR LOS ATRIBUTOS "action" en mi elemento "form". Por ejemplo:
		<form action="/url-where-you-want-to-submit-form-data">
  			<input>
		</form>
		1.1.20. Agrega un botón de envío a un formulario
		_ AHORA se NESECITA colocar un Botón de Enviar en el CUADRITO para un servidor llamado "submit".  Al hacer clic en este botón se enviarán los datos del 
		formulario a la URL especificada con el atributo "action" de tu formulario. Por ejemplo:
		<button type="submit">Submit</button>
		1.1.21. Usa HTML5 para requerir un campo
		_ Con HTML5 puedes obligar al usuario para que llene los cuadritos a juro, hasta que no lo haya rellenado NO lo podrá enviar. Por ejemplo, si deseas hacer 
		obligatorio un campo de entrada de texto, puedes agregar el atributo "required" dentro del elemento "input", de esta forma: 
		<input type="text" required>
		Basicámente el que hace la (magia) para que obligue a que llene los cuadritos al usuario se llama el atributo "required", siempre y cuando esten dentro del 
		elemento "input".
		1.1.22. Crea un conjunto de botones de radio
		_ Un (radio buttons/Botones de radio) son más que botones de selección simple como si fuera un parcial que te dan opciones para escojer. Los botones de 
		radio son un tipo de entrada "input". Cada uno de tus botones de radio puede anidarse dentro de su propio elemento label. Envolver un elemento "input" 
		dentro de un elemento "label" asociará automáticamente la entrada del botón de radio con el elemento "label" que lo rodea. 
		NOTA IMPORTANTE!!!: Todos los botones de radio relacionados deben tener el mismo atributo "name" para crear un grupo de botones de radio. Al crear un grupo 
		de radio, si se selecciona cualquier botón de radio se deselecciona automáticamente los otros botones dentro del mismo grupo, asegurándose que el usuario 
		proporcione solo una respuesta. POR EJEMPLO, (este es un ejemplo de un botón de radio "solo solito"):
		<label> 
  			<input type="radio" name="indoor-outdoor">Indoor 
		</label>
		PRO-TIPS: Se considera buena práctica establecer un atributo "for" en el elemento "label", con un valor que coincida con el valor del atributo "id" del 
		elemento "input". Esto permite a las tecnologías asistivas crear una relación vinculada entre la etiqueta y el elemento hijo "input". POR EJEMPLO:
		<label for="indoor"> 
  			<input id="indoor" type="radio" name="indoor-outdoor">Indoor 
		</label>
		1.1.23. Crea un conjunto de casillas de verificación
		_ Se aprende a que puedes hacer botones pero en vez que aparezca un puntico azul o negro, va a aparecer un checking (es decir un "rayita hacia arriba").
		En eso consite las casillas de verificación (checkboxes). Las casillas de verificación son un tipo de "input" (entrada). Las (checkboxes) pueden anidarse
		dentro de su propio elemento "label". NOTA: Todos los inputs de tipo casilla de verificación que están relacionados entre sí deben tener el mismo atributo "name".
		Se considera buena práctica definir explícitamente la relación entre un "input" de tipo checkbox (casilla de verificación) y su correspondiente "label" (etiqueta), 
		estableciendo el atributo "for" en el elemento "label" para que coincida con el atributo "id" del "input" asociado. POR EJEMPLO:
		<label for="loving"><input id="loving" type="checkbox" name="personality"> Loving</label>
		1.1.24. Usa el atributo value con botones de radio y casillas de verificacion
		_ Básicamente es lo mismo pero ahora el atributo "value" va para los botones de radio y casillas de verificación. Es decir, los inputs de tipo "radio" y "checkbox" 
		reportan sus valores desde el atributo "value". EJEMPLO:
		<label for="indoor">
  			<input id="indoor" value="indoor" type="radio" name="indoor-outdoor">Indoor
		</label>
		<label for="outdoor">
 			 <input id="outdoor" value="outdoor" type="radio" name="indoor-outdoor">Outdoor
		</label>
		Aquí tienes dos inputs de tipo "radio". Cuando el usuario envía el formulario con la opción "indoor" seleccionada, los datos del formulario incluirán la línea: 
		indoor-outdoor=indoor. Esto proviene de los atributos "name" y "value" del input "indoor".
		PERO... ¿QUE PASARÍA SI... Yo omito el Atributo "value"?. Si omites el atributo "value", los datos del formulario enviado utilizarán el valor por defecto, que es "on". 
		En este escenario, si el usuario hizo click en la opción "indoor" y envió el formulario, el dato resultante del formulario sería "indoor-outdoor=on", lo cual no 
		resulta útil. Por lo que el atributo "value" debe establecerse a un valor que identifique la opción claramente.
		1.1.25. Marca botones de radio y casillas de verificación por defecto
		_ Básicamente hay un atributo "checked" que si lo agregas al interior de un elemento de entrada. Cuando insertes el "checked" te va a salir por defecto el Típico 
		puntico azul o checking. POR EJEMPLO:
		<input type="radio" name="test-name" checked>
		FÍJESE QUE EL "checked" al final del elemento de entrada, es el que hace que se marqué por default automáticamente UNA las "Opciones Simples".
		1.1.26. Anida muchos elemntos dentro de un solo elemento div
		_ Se aprende a usar el elemento de división <div>, ya que es un contenedor de propósito general para otros elementos. Se ABRE con <div> y se CIERRA con </div>.
		1.1.27. Declara el Doctype de un documento HTML
		_ La importacia del Doctype es para saber si una instrucción especial que va al inicio de nuestro documento HTML y que permita al navegador entender
		 qué versión de HTML estamos utilizando. A JURO SIEMPRE SE DEBE USAR EN LA PRIMERA LINEA EL: <!DOCTYPE html> ,luego el resto de tu código HTML necesita ser 
		envuelto en etiquetas html. La apertura <html> va directamente debajo de la línea <!DOCTYPE html>, y el cierre </html> va en el final de la página. EJEMPLO:
		<!DOCTYPE html>
		<html>
 		 <!-- Your HTML code goes here -->
		</html>
		1.1.28. Define el encabezado y el cuerpo de un Documento HTML
		_ En resumen una página web debe llevar OBLIGATORIAMENTE <!DOCTYPE html> ,luego de eso tiene su estructura va dentro de las etiquetas "html" conjuntamente después 
		de los elementos "head" y "body". Es decir, la información de la página iría dentro de la etiqueta "head" y luego el contenido de la página (Lo que se ve en la pantalla) 
		iría dentro de la etiqueta "body". Elementos de metadatos, tales como "link", "meta", "title", y "style", típicamente van dentro del elemento "head". POR EJEMPLO:
		<!DOCTYPE html>
		<html>
 		 <head>
		    <!-- metadata elements -->
		 </head>
		 <body>
		    <!-- page contents -->
		 </body>
		</html>

		En conclusión, HTML es mucho más que un simple lenjuaje de enmarcado...

	1.2- CSS básico
		1.2.1.  Cambia el color del texto
		_ Se aprende a usar CSS para cambiar de colores las letras, cambaindo el "style" en los elementos como ejemplo h2.
		<h2 style="color: blue;">CatPhotoApp</h2>
		*NOTA: Ten en cuenta que es una buena práctica terminar las declaraciones de inline "style" usando punto y coma (;).
		1.2.2.  Utiliza selectores CSS para dar estilo a elementos
		_ Inline CSS es una de las formas de especificar el estilo de un elemento, pero existe una mejor forma de aplicar estilos CSS.
		Se crea un bloque style como el que se ve a continuación:
		<style>
		</style>
		Fijarse que en el bloque de estilo (style), se puede crear un selector CSS para los elementos "h2", sean de color rojo puedes añadir una regla de estilo.
		POR EJEMPLO:
		<style>
		  h2 {
		    color: red;
		  }
		</style>
		Ten en cuenta que es importante tener tanto llaves de apertura como de cierre ("{" y "}") alrededor de la(s) regla(s) de estilo de cada elemento.
		Además asegúrate de añadir un punto y coma (;) al final de cada una de las reglas de estilo de tu elemento.
		1.2.3.  Usa una clase CSS para aplicar estilos a un elemento
		_ Se aprende sobre el cómo declarar una clase CSS; por ejemplo:
		<style>
  		.blue-text {
  		  color: blue;
  		}
		</style>
		1.2.4.  Aplica un estilo a múltiples elementos usando una clase CSS
		_ Se aprende sobre que el aplicar la clase "red-text" en los elementos "p". POR EJEMPLO:
		<p class="red-text">Click here to view more <a href="#">cat photos</a>.</p>
		1.2.5.  Cambia el tamaño de fuente de un elemento
		Se aprende sobre el tamaño de una fuente que es controlado por la propiedad CSS "font-size". EJEMPLO:
		h1 {
		  font-size: 30px;
		}
		1.2.6.  Establece la familia de fuentes de un elemento
		_ Se aprende sobre la propiedad "font-family" (familia de fuente) para establecer qué fuente debe usar un elemento.
		ES DECIR, para poder configurar a través de CSS, para el tipo de "Letrica" en las letras para el texto.
		Por ejemplo, si quieres establecer la fuente de tu elemento h2 a sans-serif, usarías el siguiente CSS:
		h2 {
		  font-family: sans-serif;
		}
		1.2.7.  Importa una fuente de Google Fonts
		_ Se aprende a como importar una fuente de Google Fonts, para tu web.ç
		1.2.8. 