6# CSS Flexbox

RESUMEN DE LO APRENDIDO EN CADA LECCIÓN!!!

	1.6- CSS Flexbox
		1.6.1.  Utiliza display: flex para posicionar dos cajas
		_ Esta sección utiliza estilos de desafío alternos para mostrar cómo usar CSS para posicionar elementos de una manera flexible. En primer lugar, un desafío explicará la teoría, luego un desafío práctico utilizando un simple componente de tweet aplicará el concepto de flexbox.
Colocar la propiedad CSS “ display: flex; ” en un elemento te permite usar otras propiedades flex para construir una página responsiva.
		1.6.2.  Agregar superpoderes flex al tweet incrustado
		_ A la derecha está el tweet incrustado que se utilizará como ejemplo práctico. Algunos de los elementos lucirían mejor con una disposición diferente. El último desafío demostró ” display: flex “. Aquí la agregaras a varios componentes en el tweet incrustado para empezar a ajustar su posición. 

		1.6.3.  Utilizar la propiedad flex-direction para hacer una fila
		_ Agregando “ display: flex “ a un elemento lo convierte en un contenedor flexible. Esto permite alinear cualquier elemento secundario de ese elemento en filas o columnas. Para ello, agrega la propiedad “ flex-direction “ al elemento principal y configúralo en fila o columna. La creación de una fila alineara los elementos secundarios horizontalmente, y la creación de una columna alineara los elementos secundarios verticalmente.
Otras opciones para “flex-direction“ son “row-reverse” y “column-reverse”.
Nota: El valor predeterminado para la propiedad “flex-direction” es “row”.
		1.6.4.  Aplica la propiedad flex-direction para crear filas en el tweet Insertado
		_ El “header” y “footer” en el ejemplo de tweet insertado tienen elementos secundarios que podrían organizarse como filas usando la propiedad “flex-direction” . Esto le dice a CSS que alinee los hijos horizontalmente. 

		1.6.5.  Utiliza la propiedad flex-direction para hacer una columna
		_ Los dos últimos desafíos usaron la propiedad “flex-direction” establecida en “row”. Esta propiedad también puede crear una columna apilando verticalmente los hijos de un contenedor flex. 

		1.6.6.  Aplica la propiedad flex-direction para crear filas en el tweet insertado
		_ El “header” y “footer” del tweet insertado usaron previamente la propiedad “flex-direction” con un valor de fila. De manera similar, los elementos dentro del elemento “ .profile-name “ funcionarían bien apilados como una columna. 

		1.6.7.  Alinea elementos mediante la propiedad justify-content
		_ Algunas veces los elementos flexibles dentro de un contenedor flexible no llenan todo el espacio del contenedor. Es común querer indicarle al CSS cómo alinear y espaciar los elementos flexibles de una determinada manera. Afortunadamente, la propiedad “justify-content” tiene varias opciones para hacer esto. Pero primero, hay que entender alguna terminología importante antes de revisar dichas opciones.
Aquí hay una imagen útil que muestra una fila para ilustrar los conceptos siguientes.
Recuerda que establecer un contenedor flexible como fila coloca los elementos flexibles uno al lado del otro de izquierda a derecha. Un contenedor flexible establecido como columna coloca los elementos flexibles apilados verticalmente de arriba a abajo. Para cada uno, la dirección en la que están dispuestos los elementos flexibles se llama el eje principal. Para una fila, esta es una línea horizontal que recorta cada elemento. Y para una columna, el eje principal es una línea vertical a través de los elementos.
Hay varias opciones para espaciar los elementos flexibles a lo largo de la línea que representa el eje principal. Uno de los más utilizados es “  justify-content: center;  “, el cual alinea hacia el centro todos los elementos flexibles dentro del contenedor flexible. Otras opciones incluyen:
    • “flex-start”: alinea los elementos con el inicio del contenedor flex. Para una fila, esto empuja los elementos a la izquierda del contenedor. Para una columna, esto empuja los elementos a la parte superior del contenedor. Esta es la alineación predeterminada si no se especifica ningún tipo de “justify-content”.
    • “flex-end”: alinea los elementos con el final del contenedor flex. Para una fila, esto empuja los elementos a la derecha del contenedor. Para una columna, esto empuja los elementos a la parte inferior del contenedor.
    • “space-between”: alinea los elementos en el centro del eje principal, con un espacio extra entre los elementos. Los primeros y últimos elementos son empujados hasta el borde del contenedor flexible. Por ejemplo, en una fila el primer elemento está en el lado izquierdo del contenedor, el último elemento está en el lado derecho del contenedor, luego el espacio restante se distribuye uniformemente entre los demás elementos.
    • “space-around”: similar a ”space-between” pero los primeros y últimos elementos no están fijados en los bordes del contenedor, el espacio se distribuye alrededor de todos los elementos con la mitad de un espacio en ambos extremos del contenedor flexible.
    • “space-evenly”: Distribuye el espacio de manera uniforme entre los elementos flexibles con un espacio completo en ambos extremos del contenedor flexible
		1.6.8.  Utiliza la propiedad justify-content en el tweet Insertado
		_ El último desafío mostró un ejemplo de la propiedad “  justify-content.  ” Para el tweet insertado, esta propiedad se puede aplicar para alinear los elementos en el “  .profile-name  ”. 

		1.6.9.  Alinea elementos mediante la propiedad align-items
		_ La propiedad “align-items” es similar a “justify-content” . Recuerda que la propiedad “justify-content” alineó los elementos flexibles a lo largo del eje principal. Para las filas, el eje principal es una línea horizontal y para las columnas es una vertical.
Los contenedores flexibles también tienen un eje transversal que es el opuesto al eje principal. Para las filas, el eje transversal es vertical y para las columnas, el eje transversal es horizontal.
CSS ofrece la propiedad ”align-items” para alinear elementos flexibles a lo largo del eje transversal. Para una fila, le indica al CSS como empujar los elementos en toda la fila hacia arriba o hacia abajo dentro del contenedor. Y para una columna, como empujar todos los elementos hacia la izquierda o hacia la derecha dentro del contenedor.
Los diferentes valores disponibles para “align-items” incluyen:
    • “flex-start”: alinea los elementos con el inicio del contenedor flexible. Para las filas, esto alinea los elementos a la parte superior del contenedor. Para las columnas, esto alinea los elementos a la parte izquierda del contenedor.
    • “flex-end”: alinea los elementos con el final del contenedor flexible. Para las filas, esto alinea los elementos a la parte inferior del contenedor. Para las columnas, esto alinea los elementos a la parte derecha del contenedor.
    • “center:” alinea los elementos hacia el centro. Para las filas, esto alinea los elementos verticalmente (igual espacio por encima y por debajo de los elementos). Para columnas, esto las alinea horizontalmente (igual espacio a la izquierda y a la derecha de los elementos).
    • “stretch”: estira los elementos para llenar el contenedor flexible. Por ejemplo, los elementos de filas son estirados para llenar el contenedor flexible de arriba hacia abajo. Este es el valor predeterminado si no se especifica ningún tipo de “align-items”.
    • “baseline”: alinea los elementos con sus líneas base. Una línea base es un concepto de texto, piensa en ella como la línea en la que se sitúan las letras.
		1.6.10. Utiliza la propiedad align-items en el tweet insertado
		_  El último desafío introdujo la propiedad “align-items” dio un ejemplo. Esta propiedad se puede aplicar a unos cuantos elementos del tweet insertado para alinear los elementos flexibles dentro de ellos. 

		1.6.11. Usa la propiedad flex-wrap para envolver una fila o columna
		_ CSS flexbox tiene una característica para dividir un elemento flexible en varias filas (o columnas). De forma predeterminada, un contenedor flexible encajará todos los elementos flexibles juntos. Por ejemplo, una fila estará completa en una sola línea.
		Sin embargo, usar la propiedad “flex-wrap” le indica al CSS que envuelva los elementos. Esto significa que los elementos extra se mueven hacia una nueva fila o columna. El punto de ruptura donde ocurre la envoltura depende del tamaño de los elementos y del tamaño del contenedor.
CSS también tiene opciones para la dirección de la envoltura:
    • “nowrap”: esta es la configuración predeterminada, y no envuelve elementos.
    • “wrap”: envuelve elementos en múltiples líneas de arriba a abajo si están en filas y de izquierda a derecha si están en columnas.
    • “wrap-reverse”: envuelve elementos en múltiples líneas de abajo hacia arriba si están en filas y de derecha a izquierda si están en columnas.
		1.6.12. Utiliza la propiedad flex-shrink para reducir elementos
		_ Hasta ahora, todas las propiedades en los desafíos se aplican al contenedor flexible (el padre de los elementos flex). Sin embargo, hay varias propiedades útiles para los elementos flex.
La primera es la propiedad “flex-shrink” . Cuando se usa, permite que un elemento se contraiga si el contenedor flex es demasiado pequeño. Los elementos se reducen cuando el ancho del contenedor principal es menor que el ancho combinado de todos los elementos flex dentro del él.
La propiedad “flex-shrink” toma números como valores. Cuando mayor sea el número, más se reducirá en comparación con los otros elementos en el contenedor. Por ejemplo, si un elemento tiene un “flex-shrink” con valor de “1” y el otro tiene un “flex-shrink” con valor de “3”, el que tiene el valor de “3” se reducirá tres veces más que el otro.
		1.6.13. Usa la propiedad flex-grow para expandir elementos
		_ 
		
		1.6.14. Usa la propiedad flex-basis para establecer el tamaño inicial de un elemento
		_ 

		1.6.15. Usa la propiedad abreviada flex
		_ 
		
		1.6.16. Usa la propiedad order para reorganizar los elementos
		_ 

		1.6.18. Usa la propiedad align-self
		_ 
