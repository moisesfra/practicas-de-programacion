3# Diseño visual aplicado

RESUMEN DE LO APRENDIDO EN CADA LECCIÓN!!!

	1.3- Diseño visual aplicado
		1.3.1.  Crea un balance visual usando la propiedad text-align
		_ Se aprende sobre la propiedad “text-align” para poner texto centrado,justificado, a la izquierda o la derecha. 

		1.3.2.  Ajusta el ancho de un elemento utilizando la propiedad width
		_ El ancho de un elemento con la propiedad width en CSS. Los valores se pueden dar en unidades de longitud relativa (como “em”, unidades de longitud absoluta (como “px”, o como un porcentaje de su elemento padre contenedor. El siguiente ejemplo cambia el ancho de una imagen a 220px:
img {
  width: 220px;
}

		1.3.3.  Ajusta la altura de un elemento utilizando la propiedad height
		_ Se especifica la altura de un elemento con la propiedad height en CSS como lo haces con la propiedad width (ancho). En el siguiente ejemplo, se cambia la altura de una imagen a 20px:
img {
  height: 20px;
}

		1.3.4.  Utiliza la etiqueta strong para poner el texto en negrita
		_ Para poner el texto en negrita, puedes usar la etiqueta strong. Esto se usa a menudo para llamar la atención sobre el texto y simbolizar que es importante. Con la etiqueta strong, el navegador aplica el CSS de font-weight: bold; al elemento. Ejemplo:
<strong>Stanford University</strong>

		1.3.5.  Utiliza la etiqueta u para subrayar texto 
		_ Para subrayar el texto, puedes utilizar la etiqueta “u”. Esto se usa a menudo para indicar que una sección del texto es importante, o algo que hay que recordar. Con la etiqueta “u”, el navegador aplica el CSS de text-decoration: underline; al elemento. Ejemplo:
Hola <u>Mundo loco</u>

		1.3.6.  Usa la etiqueta em para poner texto en cursiva 
		_ Para enfatizar el texto, puedes usar la etiqueta “em”. Esto muestra el texto en cursiva, ya que el navegador aplica el CSS de font-style: italic; al elemento. Ejemplo:
Hola <em>Mundo loco</em>

		1.3.7.  Usa la etiqueta s para tachar texto 
		_ Para tachar el texto, que es cuando una línea horizontal atraviesa los caracteres, puede usar la etiqueta “s”. Muestra que una sección de texto ya no es válida. Con la etiqueta “s”, el navegador aplica el CSS de text-decoration: line-through; al elemento. Ejemplo:
<h4><s>Google</s></h4>

		1.3.8.  Crea una línea horizontal usando el elemento hr 
		_ Se puede usar la etiqueta “hr” para agregar una línea horizontal a través del ancho de su elemento contenedor. Esto se puede usar para definir un cambio de tema o para separa grupos de contenido visualmente. Ejemplo:
<h4><s>Google</s> Alphabet</h4>
<hr>
<h5>Holis xD</h5>

		1.3.9.  Ajusta la propiedad background-color del texto 
		_ En lugar de ajustar el fondo general o el color del texto para que el primer plano sea fácilmente legible, puedes agregar un background-color al elemento que contiene el texto que deseas destacar. Este reto utiliza rgba() en lugar de códigos hex o rgb() normal.
rgba significa:
r = red
g = green
b = blue
a = alfa/nivel de opacidad
Ejemplo:
background-color: rgba(45, 45, 45, 0.1) 
Los valores RGB pueden variar de 0 a 255. El valor alfa puede variar de 1, que es completamente opaco o un color sólido, a 0, que es completamente transparente o claro. rgba() es ideal para usar en este caso, ya que te permite ajustar la opacidad. Esto significa que no tienes que bloquear completamente el fondo. 


		1.3.10. Ajusta el tamaño de un título contra una etiqueta de párrafo
		_ El tamaño de fuente de las etiquetas de encabezado (h1 a h6) generalmente debería ser mayor que el tamaño de fuente de las etiquetas de párrafos. Esto hace que sea más sencillo para que el usuario entienda visualmente el diseño y el nivel de importancia de cada elemento en la página. Utiliza la propiedad font-size para ajustar el tamaño del texto en un elemento. Ejemplo:
font-size: 27px;

		1.3.11. Agrega box-shadow a un elemento tipo tarjeta 
		_ La propiedad “box-shadow” aplica una o más sombras a un elemento.
La propiedad “box-shadow” toma valores para
    • offset-x (qué tan lejos extender la sombra horizontalmente desde el elemento),
    • offset-y (qué tan lejos extender la sombra verticalmente desde el elemento),
    • blur-radius,
    • spread-radius 
    • color, en ese orden.
Los valores “blur-radius” y “spread-radius” son opcionales.
Se pueden crear múltiples “box-shadows” usando comas para separar las propiedades de cada elemento “box-shadow”.
A continuación un ejemplo de CSS para crear múltiples sombras con un poco de desenfoque, con colores negros casi transparentes: EJEMPLO:
box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);

		1.3.12. Disminuir la opacidad de un elemento 
		_ La propiedad “opacity” en CSS se usa para ajustar la opacidad o, por el contrario, la transparencia de un elemento.
Un valor de 1 es opaco, que no es transparente en absoluto.
Un valor de 0.5 es la mitad transparente.
Un valor de 0 es completamente transparente.
El valor dado se aplicará a todo el elemento, ya sea una imagen con cierta transparencia, o los colores de primer plano y fondo para un bloque de texto. Ejemplo:
opacity: 0.7;
		
		1.3.13. Usa la propiedad text-transform para hacer el texto mayúsculas
		_ La propiedad “text-transform” en CSS se utiliza para cambiar la apariencia del texto. Es una forma conveniente de asegurarse de que el texto en una página web aparezca de manera consistente, sin tener que cambiar el contenido del texto de los elementos HTML reales.
		
		1.3.14. Establece el tamaño de fuente para varios elementos de títulos
		_ La propiedad “font-size” se usa para especificar que tan grande es el texto en un elemento dado. Esta regla se puede utilizar para varios elementos para crear coherencia visual del texto en una página.

		1.3.15. Establece el font-weight para varios elementos de títulos 
		_ Se establece el “font-size” de cada etiqueta de título en el último desafío, aquí podrás ajustar el “font-weight”.
La propiedad “font-weight” establece que tan gruesos o delgados son los caracteres en una sección de texto.
		1.3.16. Establece el tamaño de fuente del texto del párrafo
		_  La propiedad “font-size” en CSS no se limita a los títulos, se puede aplicar a cualquier elemento que contenga texto. 

		1.3.17. Establece la line-height de los párrafos 
		_ CSS ofrece la propiedad “line-height” para cambiar la altura de cada línea en un bloque de texto. Como sugiere el nombre, cambia la cantidad de espacio vertical que recibe cada línea de texto. 

		1.3.18. Ajusta el hover de una etiqueta anchor 
		_ El uso de las pseudo-clases es una palabra clave que se puede agregar a los selectores para seleccionar un estado específico de un elemento.
Por ejemplo, el estilo de una etiqueta "anchor" puede ser cambiado por el estado de su hover utilizando el selector de pseudo-clase :hover. Aquí está el CSS para cambiar el color “color” de la etiqueta de "anchor" a rojo durante el estado hover:
a:hover {
  color: red;
}

		1.3.19. Cambia la posición relativa de un elemento 
		_ Cuando la posición de un elemento se establece a “relative”, te permite especificar como CSS lo moverá relativo a su posición actual dentro del flujo normal de la página. Se empareja con las propiedades de desplazamiento CSS de left o right, y top o bottom. Estas dicen cuántos pixeles, porcentajes, o ems se debe mover el elemento lejos de donde esté normalmente posicionado. El siguiente ejemplo mueve el párrafo 10 pixeles lejos de la parte inferior:
p {
  position: relative;
  bottom: 10px;
}
Cambiando la posición de un elemento a relative no lo quita del flujo normal; otros elementos a su alrededor aún se comportarán como si dicho elemento estuviera en su posición predeterminada.
		1.3.20. Mueve un elemento posicionado relativamente con desplazamientos de CSS 
		_ Los desplazamientos CSS de “top” o “bottom” y “left” o “right” indican al navegador hasta que punto debe compensar un elemento en relación con el lugar donde se ubicara en el flujo normal del documento. Está compensando un elemento lejos de un punto dado, lo que aleja el elemento del lado al que se hace referencia (efectivamente, en la dirección opuesta). Como viste en el último desafío, usando el desplazamiento “top” movió el “h2” hacia abajo. Del mismo modo, usando un desplazamiento “left” mueve un elemento hacia la derecha. 

		1.3.21. Bloquea un elemento con relación a su padre con el posicionamiento absoluto 
		_ La siguiente opción para la propiedad CSS “position” es “absolute”, que bloquea el elemento en su lugar en relación con su contenedor principal. A diferencia de la posición “relative”, esto elimina el elemento del flujo normal del documento, por lo que los elementos circundantes lo ignoran. Las propiedades de desplazamiento de CSS (superior o inferior e izquierda o derecha) se utilizan para ajustar la posición.
		Un matiz del posicionamiento absoluto es que estará bloqueado en relación con su antepasado posicionado más cercano. Si olvidas agregar una regla de posición al elemento principal, (esto generalmente se hace usando “  position: relative;  ”), el navegador seguirá buscando en la jerarquía de elementos y, en última instancia tomará por defecto la etiqueta “body”.
		1.3.22. Bloquea un elemento a la ventana del navegador con el posicionamiento fijo 
		_ El diseño que ofrece CSS es la posición “fixed”, que es un tipo de posicionamiento absoluto que bloquea un elemento relativo a la ventana del navegador. Similar al posicionamiento absoluto, se usa con las propiedades de desplazamiento CSS y también elimina el elemento del flujo normal del documento. Otros elementos ya no "se dan cuenta" de donde se coloca, lo que puede requerir algunos ajustes de diseño en otros lugares.
Una diferencia clave entre las posiciones “fixed” y “absolute” es que un elemento con una posición fija (fixed) no se moverá cuando el usuario se desplace.
		1.3.23. Empuja elementos hacia la izquierda o hacia la derecha con la propiedad float 
		_ La siguiente herramienta de posicionamiento en realidad no usa “position”, sino que establece la propiedad “float” de un elemento. Los elementos flotantes se eliminan del flujo normal de un documento y se empujan a “left” o “right” de su elemento padre contenedor. Se usa comúnmente con la propiedad “width” para especificar cuanto espacio horizontal requiere el elemento flotante. 

		1.3.24. Cambia la posición de los elementos superpuestos con la propiedad z-index
		_ Cuando los elementos son posicionados para superponerse (i.e. usando “  position: absolute | relative | fixed | sticky  “), el elemento que viene después dentro del marcado HTML aparecerá, por defecto, encima de los otros elementos. Sin embargo, la propiedad “z-index” puede especificar el orden de cómo los elementos están apilados unos sobre otros. Debe ser un entero (i.e. un número entero y no un decimal), y los elementos que mayor valor tengan en “z-index” serán movidos más arriba en la pila de elementos que aquellos con valores menores. 

		1.3.25. Centra un elemento horizontalmente usando la propiedad margin
		_  Otra técnica de posicionamiento consiste en centrar un elemento de bloque horizontalmente. Una manera de hacer esto es que “margin” tenga valor auto.
Este método también funciona para imágenes. Las imágenes son elementos en línea de forma predeterminada, pero se pueden cambiar a elementos de bloque cuando se establece la propiedad “display” en “block”.
		1.3.26. Aprende sobre colores complementarios  
		_  El círculo cromático es una herramienta útil para observar cómo los colores están relacionados entre sí - es un círculo donde los tonos similares están juntos y los tonos diferentes alejados. Cuando dos colores opuestos están juntos en el círculo, se los llama colores complementarios. Se caracterizan porque si se combinan, se cancelan así mismos y crean un color gris. Sin embargo, al ubicarse juntos, estos colores parecen más brillantes y producen un contraste visual fuerte.
A continuación hay algunos ejemplos de colores con sus códigos hexadecimales:
rojo (#FF0000) y cian (#00FFFF)
verde(#00FF00) y magenta (#FF00FF)
azul (#0000FF) y amarillo (#FFF00)
Esto es diferente del anticuado modelo de color RYB que muchos de nosotros aprendimos en la escuela, que tiene diferentes colores primarios y complementarios. La teoría moderna del color utiliza el modelo aditivo RGB (como en una pantalla de computadora) y el modelo restante CMY(K) (como en la impresión). Lee aquí para obtener más información sobre este complejo tema.
Hay muchas herramientas de selección de color disponibles en línea que tienen la opción de encontrar el complemento de un color.
Nota: El uso del color puede ser una forma poderosa de agregar interés visual a una página. Sin embargo, el color por sí solo no debe utilizarse como la única manera de transmitir información importante porque los usuarios con deficiencias visuales pueden no entender ese contenido. Esta cuestión se tratará con más detalle en los desafíos de accesibilidad aplicada.
		1.3.27. Aprende sobre colores terciarios
		_ 

		1.3.28. Adjustar los colores de varios elementos para colores complementarios 
		_

		1.3.29. Ajusta el matiz de un color 
		_ 

		1.3.30. Ajusta el tono de un color 
		_ 

		1.3.31. Crea un gradiente lineal de CSS gradual 
		_ 

		1.3.32. Utiliza un degradado lineal CSS para crear un elemento rayado 
		_ 

		1.3.33. Crea textura agregando un patrón sutil como imagen de fondo 
		_ 

		1.3.34. Utiliza la propiedad de escala de transformación CSS para cambiar el tamaño de un elemento 
		_ 

		1.3.35. Utiliza la propiedad de escala de transformación CSS para escalar un elemento al desplazarse 
		_ 

		1.3.36. Utiliza la propiedad de transformación CSS skewX para inclinar un elemento a lo largo del eje X 
		_ 

		1.3.37. Utiliza la propiedad de transformación CSS skewY para inclinar un elemento a lo largo del eje Y  
		_ 

		1.3.38. Crea un gráfico usando CSS 
		_ 

		1.3.39. Crea una forma más compleja usando CSS y HTML  
		_ 

		1.3.40. Aprende como funcionan las propiedades de CSS @keyframes y animación 
		_ 
		
		1.3.41. Usa animación CSS para cambiar el estado del desplazamiento de un botón 
		_ 
		
		1.3.42. Modifica el modo de relleno de una animación (animation-fill-mode) 
		_ 
		
		1.3.43. Crear movimiento usando animación CSS 
		_ 
	
		1.3.44. Crear dirección visual desvaneciendo un elemento de izquierda a derecha 
		_ 

		1.3.45. Animar los elementos continuamente utilizando un contador de animaciones infinitas 
		_ 

		1.3.46. Haz latir un corazón con CSS usando un recuento de animación infinita 
		_ 
		
		1.3.47. Elementos animados con fluctuaciones 
		_ 

		1.3.48. Animar múltiples elementos con ritmos diferentes
		_ 

		1.3.49. Cambia la duración de las animaciones con palabras clave  
		_ 

		1.3.50. Descubre como funcionan las curvas de Bezier
		_ 

		1.3.51. Usa una curva de Bezier para mover un gráfico 
		_ 

		1.3.52. Haz que el movimiento sea más natural usando una curva de Bezier 
		_ 
